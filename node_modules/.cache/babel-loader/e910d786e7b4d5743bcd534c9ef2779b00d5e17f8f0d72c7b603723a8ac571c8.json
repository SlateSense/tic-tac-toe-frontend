{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\OM\\\\Desktop\\\\tic-tac-toe\\\\frontend\\\\src\\\\components\\\\PracticeBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LINES = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\nfunction getWinner(board) {\n  for (const line of LINES) {\n    const [a, b, c] = line;\n    if (board[a] && board[a] === board[b] && board[a] === board[c]) {\n      return {\n        winner: board[a],\n        line\n      };\n    }\n  }\n  return null;\n}\nfunction isDraw(board) {\n  return board.every(v => v !== null) && !getWinner(board);\n}\nfunction emptySquares(board) {\n  const out = [];\n  for (let i = 0; i < 9; i++) if (board[i] == null) out.push(i);\n  return out;\n}\nfunction smartMove(board, bot, you) {\n  const empties = emptySquares(board);\n  // 1) Win now\n  for (const i of empties) {\n    const b = board.slice();\n    b[i] = bot;\n    if (getWinner(b)) return i;\n  }\n  // 2) Block opponent win\n  for (const i of empties) {\n    const b = board.slice();\n    b[i] = you;\n    if (getWinner(b)) return i;\n  }\n  // 3) Take center\n  if (empties.includes(4)) return 4;\n  // 4) Take a corner\n  const corners = [0, 2, 6, 8].filter(i => empties.includes(i));\n  if (corners.length) return corners[Math.floor(Math.random() * corners.length)];\n  // 5) Any side\n  const sides = [1, 3, 5, 7].filter(i => empties.includes(i));\n  if (sides.length) return sides[Math.floor(Math.random() * sides.length)];\n  // Fallback\n  return empties.length ? empties[0] : null;\n}\nfunction easyMove(board) {\n  const empties = emptySquares(board);\n  if (!empties.length) return null;\n  return empties[Math.floor(Math.random() * empties.length)];\n}\nexport default function PracticeBoard() {\n  _s();\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [youSymbol, setYouSymbol] = useState('X'); // 'X' | 'O'\n  const botSymbol = youSymbol === 'X' ? 'O' : 'X';\n  const [starter, setStarter] = useState('You'); // 'You' | 'Bot'\n  const [difficulty, setDifficulty] = useState('Smart'); // 'Easy' | 'Smart'\n  const [lastMove, setLastMove] = useState(null);\n  const [winningLine, setWinningLine] = useState(null);\n  const [status, setStatus] = useState('Your move');\n  const botTimerRef = useRef(null);\n  const [botThinking, setBotThinking] = useState(false);\n\n  // Derived state\n  const ended = useMemo(() => !!getWinner(board) || isDraw(board), [board]);\n  const turnCount = useMemo(() => board.filter(v => v != null).length, [board]);\n  const yourTurn = useMemo(() => {\n    // If starter is You, you move on even counts (0,2,4...)\n    // If starter is Bot, you move on odd counts (1,3,5...)\n    return starter === 'You' ? turnCount % 2 === 0 : turnCount % 2 === 1;\n  }, [starter, turnCount]);\n  const currentSymbol = yourTurn ? youSymbol : botSymbol;\n  useEffect(() => {\n    // Update status based on state\n    const w = getWinner(board);\n    if (w) {\n      setWinningLine(w.line);\n      setStatus(w.winner === youSymbol ? 'You win!' : 'Bot wins!');\n      return;\n    }\n    if (isDraw(board)) {\n      setWinningLine(null);\n      setStatus('Draw');\n      return;\n    }\n    setWinningLine(null);\n    setStatus(yourTurn ? 'Your move' : \"Bot's move\");\n  }, [board, youSymbol, yourTurn]);\n  useEffect(() => {\n    // Bot move when it's bot's turn\n    if (ended || yourTurn || botThinking) return;\n    setBotThinking(true);\n    botTimerRef.current = setTimeout(() => {\n      setBoard(prev => {\n        const b = prev.slice();\n        let idx = null;\n        if (difficulty === 'Easy') idx = easyMove(b);else idx = smartMove(b, botSymbol, youSymbol);\n        if (idx == null || b[idx] != null) return prev; // no-op\n        b[idx] = botSymbol;\n        setLastMove(idx);\n        return b;\n      });\n      setBotThinking(false);\n    }, 420);\n    return () => {\n      if (botTimerRef.current) clearTimeout(botTimerRef.current);\n    };\n  }, [ended, yourTurn, difficulty, botSymbol, youSymbol, botThinking]);\n\n  // If controls change, reset the board and (optionally) let bot start\n  const reset = (botStart = false) => {\n    if (botTimerRef.current) clearTimeout(botTimerRef.current);\n    setBoard(Array(9).fill(null));\n    setLastMove(null);\n    setWinningLine(null);\n    setStatus(botStart ? \"Bot's move\" : 'Your move');\n    setBotThinking(false);\n  };\n  const onCell = i => {\n    if (ended || !yourTurn || board[i] != null) return;\n    const next = board.slice();\n    next[i] = youSymbol;\n    setLastMove(i);\n    setBoard(next);\n  };\n  const onChangeStarter = val => {\n    setStarter(val);\n    const botStart = val === 'Bot';\n    reset(botStart);\n  };\n  const onChangeYouSymbol = sym => {\n    if (sym === youSymbol) return;\n    setYouSymbol(sym);\n    // Keep turn order by starter; just reset board\n    reset(starter === 'Bot');\n  };\n  const onChangeDifficulty = val => {\n    setDifficulty(val);\n    // Do not reset to let user raise/lower challenge mid-game\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"panel neo-panel glass practice\",\n    role: \"region\",\n    \"aria-label\": \"Practice: You vs Bot\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"practice-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"practice-title\",\n        children: \"Practice: You vs Bot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"practice-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"toggle-group\",\n          role: \"group\",\n          \"aria-label\": \"Difficulty\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `neo-btn small ${difficulty === 'Easy' ? 'primary' : ''}`,\n            onClick: () => onChangeDifficulty('Easy'),\n            children: \"Easy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `neo-btn small ${difficulty === 'Smart' ? 'primary' : ''}`,\n            onClick: () => onChangeDifficulty('Smart'),\n            children: \"Smart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"toggle-group\",\n          role: \"group\",\n          \"aria-label\": \"Who starts\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `neo-btn small ${starter === 'You' ? 'primary' : ''}`,\n            onClick: () => onChangeStarter('You'),\n            children: \"You start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `neo-btn small ${starter === 'Bot' ? 'primary' : ''}`,\n            onClick: () => onChangeStarter('Bot'),\n            children: \"Bot starts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"toggle-group\",\n          role: \"group\",\n          \"aria-label\": \"Your symbol\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `neo-btn small ${youSymbol === 'X' ? 'primary' : ''}`,\n            onClick: () => onChangeYouSymbol('X'),\n            children: \"You: X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `neo-btn small ${youSymbol === 'O' ? 'primary' : ''}`,\n            onClick: () => onChangeYouSymbol('O'),\n            children: \"You: O\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"neo-btn small outline\",\n          onClick: () => reset(starter === 'Bot'),\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      \"aria-live\": \"polite\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board neo-board practice-board\",\n      children: board.map((cell, idx) => {\n        const win = Array.isArray(winningLine) && winningLine.includes(idx);\n        const last = lastMove === idx;\n        const xo = cell === 'X' ? ' x' : cell === 'O' ? ' o' : '';\n        const cls = `cell${xo}${win ? ' win' : ''}${last ? ' last' : ''}`;\n        const disabled = ended || !yourTurn || board[idx] !== null;\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          className: cls,\n          onClick: () => onCell(idx),\n          disabled: disabled,\n          \"aria-label\": `Practice cell ${idx + 1}`,\n          children: cell || ''\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"practice-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"small\", {\n        className: \"muted\",\n        children: \"A friendly practice board. No payments. No opponents. Just you vs. bot.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n}\n_s(PracticeBoard, \"rtt2d3q58JRY9B6KNUwKH3cgw+U=\");\n_c = PracticeBoard;\nvar _c;\n$RefreshReg$(_c, \"PracticeBoard\");","map":{"version":3,"names":["React","useEffect","useMemo","useRef","useState","jsxDEV","_jsxDEV","LINES","getWinner","board","line","a","b","c","winner","isDraw","every","v","emptySquares","out","i","push","smartMove","bot","you","empties","slice","includes","corners","filter","length","Math","floor","random","sides","easyMove","PracticeBoard","_s","setBoard","Array","fill","youSymbol","setYouSymbol","botSymbol","starter","setStarter","difficulty","setDifficulty","lastMove","setLastMove","winningLine","setWinningLine","status","setStatus","botTimerRef","botThinking","setBotThinking","ended","turnCount","yourTurn","currentSymbol","w","current","setTimeout","prev","idx","clearTimeout","reset","botStart","onCell","next","onChangeStarter","val","onChangeYouSymbol","sym","onChangeDifficulty","className","role","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","cell","win","isArray","last","xo","cls","disabled","_c","$RefreshReg$"],"sources":["C:/Users/OM/Desktop/tic-tac-toe/frontend/src/components/PracticeBoard.js"],"sourcesContent":["import React, { useEffect, useMemo, useRef, useState } from 'react';\n\nconst LINES = [\n  [0,1,2],[3,4,5],[6,7,8],\n  [0,3,6],[1,4,7],[2,5,8],\n  [0,4,8],[2,4,6]\n];\n\nfunction getWinner(board) {\n  for (const line of LINES) {\n    const [a,b,c] = line;\n    if (board[a] && board[a] === board[b] && board[a] === board[c]) {\n      return { winner: board[a], line };\n    }\n  }\n  return null;\n}\nfunction isDraw(board) {\n  return board.every(v => v !== null) && !getWinner(board);\n}\nfunction emptySquares(board) {\n  const out = [];\n  for (let i = 0; i < 9; i++) if (board[i] == null) out.push(i);\n  return out;\n}\n\nfunction smartMove(board, bot, you) {\n  const empties = emptySquares(board);\n  // 1) Win now\n  for (const i of empties) {\n    const b = board.slice(); b[i] = bot;\n    if (getWinner(b)) return i;\n  }\n  // 2) Block opponent win\n  for (const i of empties) {\n    const b = board.slice(); b[i] = you;\n    if (getWinner(b)) return i;\n  }\n  // 3) Take center\n  if (empties.includes(4)) return 4;\n  // 4) Take a corner\n  const corners = [0,2,6,8].filter(i => empties.includes(i));\n  if (corners.length) return corners[Math.floor(Math.random() * corners.length)];\n  // 5) Any side\n  const sides = [1,3,5,7].filter(i => empties.includes(i));\n  if (sides.length) return sides[Math.floor(Math.random() * sides.length)];\n  // Fallback\n  return empties.length ? empties[0] : null;\n}\nfunction easyMove(board) {\n  const empties = emptySquares(board);\n  if (!empties.length) return null;\n  return empties[Math.floor(Math.random() * empties.length)];\n}\n\nexport default function PracticeBoard() {\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [youSymbol, setYouSymbol] = useState('X'); // 'X' | 'O'\n  const botSymbol = youSymbol === 'X' ? 'O' : 'X';\n  const [starter, setStarter] = useState('You'); // 'You' | 'Bot'\n  const [difficulty, setDifficulty] = useState('Smart'); // 'Easy' | 'Smart'\n  const [lastMove, setLastMove] = useState(null);\n  const [winningLine, setWinningLine] = useState(null);\n  const [status, setStatus] = useState('Your move');\n  const botTimerRef = useRef(null);\n  const [botThinking, setBotThinking] = useState(false);\n\n  // Derived state\n  const ended = useMemo(() => !!getWinner(board) || isDraw(board), [board]);\n  const turnCount = useMemo(() => board.filter(v => v != null).length, [board]);\n  const yourTurn = useMemo(() => {\n    // If starter is You, you move on even counts (0,2,4...)\n    // If starter is Bot, you move on odd counts (1,3,5...)\n    return starter === 'You' ? (turnCount % 2 === 0) : (turnCount % 2 === 1);\n  }, [starter, turnCount]);\n  const currentSymbol = yourTurn ? youSymbol : botSymbol;\n\n  useEffect(() => {\n    // Update status based on state\n    const w = getWinner(board);\n    if (w) {\n      setWinningLine(w.line);\n      setStatus(w.winner === youSymbol ? 'You win!' : 'Bot wins!');\n      return;\n    }\n    if (isDraw(board)) {\n      setWinningLine(null);\n      setStatus('Draw');\n      return;\n    }\n    setWinningLine(null);\n    setStatus(yourTurn ? 'Your move' : \"Bot's move\");\n  }, [board, youSymbol, yourTurn]);\n\n  useEffect(() => {\n    // Bot move when it's bot's turn\n    if (ended || yourTurn || botThinking) return;\n    setBotThinking(true);\n    botTimerRef.current = setTimeout(() => {\n      setBoard(prev => {\n        const b = prev.slice();\n        let idx = null;\n        if (difficulty === 'Easy') idx = easyMove(b);\n        else idx = smartMove(b, botSymbol, youSymbol);\n        if (idx == null || b[idx] != null) return prev; // no-op\n        b[idx] = botSymbol; setLastMove(idx);\n        return b;\n      });\n      setBotThinking(false);\n    }, 420);\n    return () => { if (botTimerRef.current) clearTimeout(botTimerRef.current); };\n  }, [ended, yourTurn, difficulty, botSymbol, youSymbol, botThinking]);\n\n  // If controls change, reset the board and (optionally) let bot start\n  const reset = (botStart = false) => {\n    if (botTimerRef.current) clearTimeout(botTimerRef.current);\n    setBoard(Array(9).fill(null));\n    setLastMove(null);\n    setWinningLine(null);\n    setStatus(botStart ? \"Bot's move\" : 'Your move');\n    setBotThinking(false);\n  };\n\n  const onCell = (i) => {\n    if (ended || !yourTurn || board[i] != null) return;\n    const next = board.slice();\n    next[i] = youSymbol; setLastMove(i);\n    setBoard(next);\n  };\n\n  const onChangeStarter = (val) => {\n    setStarter(val);\n    const botStart = val === 'Bot';\n    reset(botStart);\n  };\n  const onChangeYouSymbol = (sym) => {\n    if (sym === youSymbol) return;\n    setYouSymbol(sym);\n    // Keep turn order by starter; just reset board\n    reset(starter === 'Bot');\n  };\n  const onChangeDifficulty = (val) => {\n    setDifficulty(val);\n    // Do not reset to let user raise/lower challenge mid-game\n  };\n\n  return (\n    <div className=\"panel neo-panel glass practice\" role=\"region\" aria-label=\"Practice: You vs Bot\">\n      <div className=\"practice-header\">\n        <h3 className=\"practice-title\">Practice: You vs Bot</h3>\n        <div className=\"practice-controls\">\n          <div className=\"toggle-group\" role=\"group\" aria-label=\"Difficulty\">\n            <button className={`neo-btn small ${difficulty==='Easy'?'primary':''}`} onClick={() => onChangeDifficulty('Easy')}>Easy</button>\n            <button className={`neo-btn small ${difficulty==='Smart'?'primary':''}`} onClick={() => onChangeDifficulty('Smart')}>Smart</button>\n          </div>\n          <div className=\"toggle-group\" role=\"group\" aria-label=\"Who starts\">\n            <button className={`neo-btn small ${starter==='You'?'primary':''}`} onClick={() => onChangeStarter('You')}>You start</button>\n            <button className={`neo-btn small ${starter==='Bot'?'primary':''}`} onClick={() => onChangeStarter('Bot')}>Bot starts</button>\n          </div>\n          <div className=\"toggle-group\" role=\"group\" aria-label=\"Your symbol\">\n            <button className={`neo-btn small ${youSymbol==='X'?'primary':''}`} onClick={() => onChangeYouSymbol('X')}>You: X</button>\n            <button className={`neo-btn small ${youSymbol==='O'?'primary':''}`} onClick={() => onChangeYouSymbol('O')}>You: O</button>\n          </div>\n          <button className=\"neo-btn small outline\" onClick={() => reset(starter==='Bot')}>Reset</button>\n        </div>\n      </div>\n\n      <div className=\"status\" aria-live=\"polite\">{status}</div>\n\n      <div className=\"board neo-board practice-board\">\n        {board.map((cell, idx) => {\n          const win = Array.isArray(winningLine) && winningLine.includes(idx);\n          const last = lastMove === idx;\n          const xo = cell === 'X' ? ' x' : (cell === 'O' ? ' o' : '');\n          const cls = `cell${xo}${win ? ' win':''}${last ? ' last':''}`;\n          const disabled = ended || !yourTurn || board[idx] !== null;\n          return (\n            <button key={idx} className={cls} onClick={() => onCell(idx)} disabled={disabled} aria-label={`Practice cell ${idx+1}`}>\n              {cell || ''}\n            </button>\n          );\n        })}\n      </div>\n      <div className=\"practice-footer\">\n        <small className=\"muted\">A friendly practice board. No payments. No opponents. Just you vs. bot.</small>\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,OAAO,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpE,MAAMC,KAAK,GAAG,CACZ,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACvB,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACvB,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAChB;AAED,SAASC,SAASA,CAACC,KAAK,EAAE;EACxB,KAAK,MAAMC,IAAI,IAAIH,KAAK,EAAE;IACxB,MAAM,CAACI,CAAC,EAACC,CAAC,EAACC,CAAC,CAAC,GAAGH,IAAI;IACpB,IAAID,KAAK,CAACE,CAAC,CAAC,IAAIF,KAAK,CAACE,CAAC,CAAC,KAAKF,KAAK,CAACG,CAAC,CAAC,IAAIH,KAAK,CAACE,CAAC,CAAC,KAAKF,KAAK,CAACI,CAAC,CAAC,EAAE;MAC9D,OAAO;QAAEC,MAAM,EAAEL,KAAK,CAACE,CAAC,CAAC;QAAED;MAAK,CAAC;IACnC;EACF;EACA,OAAO,IAAI;AACb;AACA,SAASK,MAAMA,CAACN,KAAK,EAAE;EACrB,OAAOA,KAAK,CAACO,KAAK,CAACC,CAAC,IAAIA,CAAC,KAAK,IAAI,CAAC,IAAI,CAACT,SAAS,CAACC,KAAK,CAAC;AAC1D;AACA,SAASS,YAAYA,CAACT,KAAK,EAAE;EAC3B,MAAMU,GAAG,GAAG,EAAE;EACd,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE,IAAIX,KAAK,CAACW,CAAC,CAAC,IAAI,IAAI,EAAED,GAAG,CAACE,IAAI,CAACD,CAAC,CAAC;EAC7D,OAAOD,GAAG;AACZ;AAEA,SAASG,SAASA,CAACb,KAAK,EAAEc,GAAG,EAAEC,GAAG,EAAE;EAClC,MAAMC,OAAO,GAAGP,YAAY,CAACT,KAAK,CAAC;EACnC;EACA,KAAK,MAAMW,CAAC,IAAIK,OAAO,EAAE;IACvB,MAAMb,CAAC,GAAGH,KAAK,CAACiB,KAAK,CAAC,CAAC;IAAEd,CAAC,CAACQ,CAAC,CAAC,GAAGG,GAAG;IACnC,IAAIf,SAAS,CAACI,CAAC,CAAC,EAAE,OAAOQ,CAAC;EAC5B;EACA;EACA,KAAK,MAAMA,CAAC,IAAIK,OAAO,EAAE;IACvB,MAAMb,CAAC,GAAGH,KAAK,CAACiB,KAAK,CAAC,CAAC;IAAEd,CAAC,CAACQ,CAAC,CAAC,GAAGI,GAAG;IACnC,IAAIhB,SAAS,CAACI,CAAC,CAAC,EAAE,OAAOQ,CAAC;EAC5B;EACA;EACA,IAAIK,OAAO,CAACE,QAAQ,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC;EACjC;EACA,MAAMC,OAAO,GAAG,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAACC,MAAM,CAACT,CAAC,IAAIK,OAAO,CAACE,QAAQ,CAACP,CAAC,CAAC,CAAC;EAC1D,IAAIQ,OAAO,CAACE,MAAM,EAAE,OAAOF,OAAO,CAACG,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGL,OAAO,CAACE,MAAM,CAAC,CAAC;EAC9E;EACA,MAAMI,KAAK,GAAG,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAACL,MAAM,CAACT,CAAC,IAAIK,OAAO,CAACE,QAAQ,CAACP,CAAC,CAAC,CAAC;EACxD,IAAIc,KAAK,CAACJ,MAAM,EAAE,OAAOI,KAAK,CAACH,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGC,KAAK,CAACJ,MAAM,CAAC,CAAC;EACxE;EACA,OAAOL,OAAO,CAACK,MAAM,GAAGL,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI;AAC3C;AACA,SAASU,QAAQA,CAAC1B,KAAK,EAAE;EACvB,MAAMgB,OAAO,GAAGP,YAAY,CAACT,KAAK,CAAC;EACnC,IAAI,CAACgB,OAAO,CAACK,MAAM,EAAE,OAAO,IAAI;EAChC,OAAOL,OAAO,CAACM,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGR,OAAO,CAACK,MAAM,CAAC,CAAC;AAC5D;AAEA,eAAe,SAASM,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACtC,MAAM,CAAC5B,KAAK,EAAE6B,QAAQ,CAAC,GAAGlC,QAAQ,CAACmC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;EACvD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGtC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;EACjD,MAAMuC,SAAS,GAAGF,SAAS,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG;EAC/C,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGzC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC/C,MAAM,CAAC0C,UAAU,EAAEC,aAAa,CAAC,GAAG3C,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;EACvD,MAAM,CAAC4C,QAAQ,EAAEC,WAAW,CAAC,GAAG7C,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAAC8C,WAAW,EAAEC,cAAc,CAAC,GAAG/C,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACgD,MAAM,EAAEC,SAAS,CAAC,GAAGjD,QAAQ,CAAC,WAAW,CAAC;EACjD,MAAMkD,WAAW,GAAGnD,MAAM,CAAC,IAAI,CAAC;EAChC,MAAM,CAACoD,WAAW,EAAEC,cAAc,CAAC,GAAGpD,QAAQ,CAAC,KAAK,CAAC;;EAErD;EACA,MAAMqD,KAAK,GAAGvD,OAAO,CAAC,MAAM,CAAC,CAACM,SAAS,CAACC,KAAK,CAAC,IAAIM,MAAM,CAACN,KAAK,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EACzE,MAAMiD,SAAS,GAAGxD,OAAO,CAAC,MAAMO,KAAK,CAACoB,MAAM,CAACZ,CAAC,IAAIA,CAAC,IAAI,IAAI,CAAC,CAACa,MAAM,EAAE,CAACrB,KAAK,CAAC,CAAC;EAC7E,MAAMkD,QAAQ,GAAGzD,OAAO,CAAC,MAAM;IAC7B;IACA;IACA,OAAO0C,OAAO,KAAK,KAAK,GAAIc,SAAS,GAAG,CAAC,KAAK,CAAC,GAAKA,SAAS,GAAG,CAAC,KAAK,CAAE;EAC1E,CAAC,EAAE,CAACd,OAAO,EAAEc,SAAS,CAAC,CAAC;EACxB,MAAME,aAAa,GAAGD,QAAQ,GAAGlB,SAAS,GAAGE,SAAS;EAEtD1C,SAAS,CAAC,MAAM;IACd;IACA,MAAM4D,CAAC,GAAGrD,SAAS,CAACC,KAAK,CAAC;IAC1B,IAAIoD,CAAC,EAAE;MACLV,cAAc,CAACU,CAAC,CAACnD,IAAI,CAAC;MACtB2C,SAAS,CAACQ,CAAC,CAAC/C,MAAM,KAAK2B,SAAS,GAAG,UAAU,GAAG,WAAW,CAAC;MAC5D;IACF;IACA,IAAI1B,MAAM,CAACN,KAAK,CAAC,EAAE;MACjB0C,cAAc,CAAC,IAAI,CAAC;MACpBE,SAAS,CAAC,MAAM,CAAC;MACjB;IACF;IACAF,cAAc,CAAC,IAAI,CAAC;IACpBE,SAAS,CAACM,QAAQ,GAAG,WAAW,GAAG,YAAY,CAAC;EAClD,CAAC,EAAE,CAAClD,KAAK,EAAEgC,SAAS,EAAEkB,QAAQ,CAAC,CAAC;EAEhC1D,SAAS,CAAC,MAAM;IACd;IACA,IAAIwD,KAAK,IAAIE,QAAQ,IAAIJ,WAAW,EAAE;IACtCC,cAAc,CAAC,IAAI,CAAC;IACpBF,WAAW,CAACQ,OAAO,GAAGC,UAAU,CAAC,MAAM;MACrCzB,QAAQ,CAAC0B,IAAI,IAAI;QACf,MAAMpD,CAAC,GAAGoD,IAAI,CAACtC,KAAK,CAAC,CAAC;QACtB,IAAIuC,GAAG,GAAG,IAAI;QACd,IAAInB,UAAU,KAAK,MAAM,EAAEmB,GAAG,GAAG9B,QAAQ,CAACvB,CAAC,CAAC,CAAC,KACxCqD,GAAG,GAAG3C,SAAS,CAACV,CAAC,EAAE+B,SAAS,EAAEF,SAAS,CAAC;QAC7C,IAAIwB,GAAG,IAAI,IAAI,IAAIrD,CAAC,CAACqD,GAAG,CAAC,IAAI,IAAI,EAAE,OAAOD,IAAI,CAAC,CAAC;QAChDpD,CAAC,CAACqD,GAAG,CAAC,GAAGtB,SAAS;QAAEM,WAAW,CAACgB,GAAG,CAAC;QACpC,OAAOrD,CAAC;MACV,CAAC,CAAC;MACF4C,cAAc,CAAC,KAAK,CAAC;IACvB,CAAC,EAAE,GAAG,CAAC;IACP,OAAO,MAAM;MAAE,IAAIF,WAAW,CAACQ,OAAO,EAAEI,YAAY,CAACZ,WAAW,CAACQ,OAAO,CAAC;IAAE,CAAC;EAC9E,CAAC,EAAE,CAACL,KAAK,EAAEE,QAAQ,EAAEb,UAAU,EAAEH,SAAS,EAAEF,SAAS,EAAEc,WAAW,CAAC,CAAC;;EAEpE;EACA,MAAMY,KAAK,GAAGA,CAACC,QAAQ,GAAG,KAAK,KAAK;IAClC,IAAId,WAAW,CAACQ,OAAO,EAAEI,YAAY,CAACZ,WAAW,CAACQ,OAAO,CAAC;IAC1DxB,QAAQ,CAACC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7BS,WAAW,CAAC,IAAI,CAAC;IACjBE,cAAc,CAAC,IAAI,CAAC;IACpBE,SAAS,CAACe,QAAQ,GAAG,YAAY,GAAG,WAAW,CAAC;IAChDZ,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,MAAMa,MAAM,GAAIjD,CAAC,IAAK;IACpB,IAAIqC,KAAK,IAAI,CAACE,QAAQ,IAAIlD,KAAK,CAACW,CAAC,CAAC,IAAI,IAAI,EAAE;IAC5C,MAAMkD,IAAI,GAAG7D,KAAK,CAACiB,KAAK,CAAC,CAAC;IAC1B4C,IAAI,CAAClD,CAAC,CAAC,GAAGqB,SAAS;IAAEQ,WAAW,CAAC7B,CAAC,CAAC;IACnCkB,QAAQ,CAACgC,IAAI,CAAC;EAChB,CAAC;EAED,MAAMC,eAAe,GAAIC,GAAG,IAAK;IAC/B3B,UAAU,CAAC2B,GAAG,CAAC;IACf,MAAMJ,QAAQ,GAAGI,GAAG,KAAK,KAAK;IAC9BL,KAAK,CAACC,QAAQ,CAAC;EACjB,CAAC;EACD,MAAMK,iBAAiB,GAAIC,GAAG,IAAK;IACjC,IAAIA,GAAG,KAAKjC,SAAS,EAAE;IACvBC,YAAY,CAACgC,GAAG,CAAC;IACjB;IACAP,KAAK,CAACvB,OAAO,KAAK,KAAK,CAAC;EAC1B,CAAC;EACD,MAAM+B,kBAAkB,GAAIH,GAAG,IAAK;IAClCzB,aAAa,CAACyB,GAAG,CAAC;IAClB;EACF,CAAC;EAED,oBACElE,OAAA;IAAKsE,SAAS,EAAC,gCAAgC;IAACC,IAAI,EAAC,QAAQ;IAAC,cAAW,sBAAsB;IAAAC,QAAA,gBAC7FxE,OAAA;MAAKsE,SAAS,EAAC,iBAAiB;MAAAE,QAAA,gBAC9BxE,OAAA;QAAIsE,SAAS,EAAC,gBAAgB;QAAAE,QAAA,EAAC;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxD5E,OAAA;QAAKsE,SAAS,EAAC,mBAAmB;QAAAE,QAAA,gBAChCxE,OAAA;UAAKsE,SAAS,EAAC,cAAc;UAACC,IAAI,EAAC,OAAO;UAAC,cAAW,YAAY;UAAAC,QAAA,gBAChExE,OAAA;YAAQsE,SAAS,EAAE,iBAAiB9B,UAAU,KAAG,MAAM,GAAC,SAAS,GAAC,EAAE,EAAG;YAACqC,OAAO,EAAEA,CAAA,KAAMR,kBAAkB,CAAC,MAAM,CAAE;YAAAG,QAAA,EAAC;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAChI5E,OAAA;YAAQsE,SAAS,EAAE,iBAAiB9B,UAAU,KAAG,OAAO,GAAC,SAAS,GAAC,EAAE,EAAG;YAACqC,OAAO,EAAEA,CAAA,KAAMR,kBAAkB,CAAC,OAAO,CAAE;YAAAG,QAAA,EAAC;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChI,CAAC,eACN5E,OAAA;UAAKsE,SAAS,EAAC,cAAc;UAACC,IAAI,EAAC,OAAO;UAAC,cAAW,YAAY;UAAAC,QAAA,gBAChExE,OAAA;YAAQsE,SAAS,EAAE,iBAAiBhC,OAAO,KAAG,KAAK,GAAC,SAAS,GAAC,EAAE,EAAG;YAACuC,OAAO,EAAEA,CAAA,KAAMZ,eAAe,CAAC,KAAK,CAAE;YAAAO,QAAA,EAAC;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC7H5E,OAAA;YAAQsE,SAAS,EAAE,iBAAiBhC,OAAO,KAAG,KAAK,GAAC,SAAS,GAAC,EAAE,EAAG;YAACuC,OAAO,EAAEA,CAAA,KAAMZ,eAAe,CAAC,KAAK,CAAE;YAAAO,QAAA,EAAC;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3H,CAAC,eACN5E,OAAA;UAAKsE,SAAS,EAAC,cAAc;UAACC,IAAI,EAAC,OAAO;UAAC,cAAW,aAAa;UAAAC,QAAA,gBACjExE,OAAA;YAAQsE,SAAS,EAAE,iBAAiBnC,SAAS,KAAG,GAAG,GAAC,SAAS,GAAC,EAAE,EAAG;YAAC0C,OAAO,EAAEA,CAAA,KAAMV,iBAAiB,CAAC,GAAG,CAAE;YAAAK,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC1H5E,OAAA;YAAQsE,SAAS,EAAE,iBAAiBnC,SAAS,KAAG,GAAG,GAAC,SAAS,GAAC,EAAE,EAAG;YAAC0C,OAAO,EAAEA,CAAA,KAAMV,iBAAiB,CAAC,GAAG,CAAE;YAAAK,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvH,CAAC,eACN5E,OAAA;UAAQsE,SAAS,EAAC,uBAAuB;UAACO,OAAO,EAAEA,CAAA,KAAMhB,KAAK,CAACvB,OAAO,KAAG,KAAK,CAAE;UAAAkC,QAAA,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5F,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEN5E,OAAA;MAAKsE,SAAS,EAAC,QAAQ;MAAC,aAAU,QAAQ;MAAAE,QAAA,EAAE1B;IAAM;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAEzD5E,OAAA;MAAKsE,SAAS,EAAC,gCAAgC;MAAAE,QAAA,EAC5CrE,KAAK,CAAC2E,GAAG,CAAC,CAACC,IAAI,EAAEpB,GAAG,KAAK;QACxB,MAAMqB,GAAG,GAAG/C,KAAK,CAACgD,OAAO,CAACrC,WAAW,CAAC,IAAIA,WAAW,CAACvB,QAAQ,CAACsC,GAAG,CAAC;QACnE,MAAMuB,IAAI,GAAGxC,QAAQ,KAAKiB,GAAG;QAC7B,MAAMwB,EAAE,GAAGJ,IAAI,KAAK,GAAG,GAAG,IAAI,GAAIA,IAAI,KAAK,GAAG,GAAG,IAAI,GAAG,EAAG;QAC3D,MAAMK,GAAG,GAAG,OAAOD,EAAE,GAAGH,GAAG,GAAG,MAAM,GAAC,EAAE,GAAGE,IAAI,GAAG,OAAO,GAAC,EAAE,EAAE;QAC7D,MAAMG,QAAQ,GAAGlC,KAAK,IAAI,CAACE,QAAQ,IAAIlD,KAAK,CAACwD,GAAG,CAAC,KAAK,IAAI;QAC1D,oBACE3D,OAAA;UAAkBsE,SAAS,EAAEc,GAAI;UAACP,OAAO,EAAEA,CAAA,KAAMd,MAAM,CAACJ,GAAG,CAAE;UAAC0B,QAAQ,EAAEA,QAAS;UAAC,cAAY,iBAAiB1B,GAAG,GAAC,CAAC,EAAG;UAAAa,QAAA,EACpHO,IAAI,IAAI;QAAE,GADApB,GAAG;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAER,CAAC;MAEb,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN5E,OAAA;MAAKsE,SAAS,EAAC,iBAAiB;MAAAE,QAAA,eAC9BxE,OAAA;QAAOsE,SAAS,EAAC,OAAO;QAAAE,QAAA,EAAC;MAAuE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC7C,EAAA,CArIuBD,aAAa;AAAAwD,EAAA,GAAbxD,aAAa;AAAA,IAAAwD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}